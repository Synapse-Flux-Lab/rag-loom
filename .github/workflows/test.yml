name: Python Tests

on:
  push:
    branches: [ main, feature/** ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests (3.12)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt', 'tests/requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f "requirements-frozen.txt" ]; then
          pip install -r requirements-frozen.txt
        elif [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        fi
        if [ -f "tests/requirements-test.txt" ]; then
          pip install -r tests/requirements-test.txt
        fi

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --cov=src --cov-report=xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  integration-tests:
    name: Integration Tests (3.12)
    runs-on: ubuntu-latest
    needs: unit-tests  # Run after unit tests pass
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt', 'tests/requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f "requirements-frozen.txt" ]; then
          pip install -r requirements-frozen.txt
        elif [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        fi
        if [ -f "tests/requirements-test.txt" ]; then
          pip install -r tests/requirements-test.txt
        fi

    - name: Run integration tests
      run: |
        pytest tests/integration/ -v

