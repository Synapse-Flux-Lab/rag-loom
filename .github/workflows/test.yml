name: Python Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.set-cache-key.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Generate cache key
        id: set-cache-key
        run: |
          KEY="$RUNNER_OS-pip-$(cat tests/requirements-test.txt setup.py pyproject.toml 2>/dev/null | sha256sum | cut -d' ' -f1)"
          echo "cache-key=$KEY" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ steps.set-cache-key.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install application and test dependencies
        run: |
          python -m pip install --upgrade pip
          export PYTHONPATH=$(pwd)
          pip install -e . --no-cache-dir

          if [ -f "tests/requirements-test.txt" ]; then
            pip install -r tests/requirements-test.txt
          else
            echo "Error: tests/requirements-test.txt not found!"
            exit 1
          fi

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ needs.install-dependencies.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Verify app package
        run: |
          export PYTHONPATH=$(pwd)
          python -c "import app; print('App installed at', app.__file__)"

      - name: Run unit tests
        run: |
          export PYTHONPATH=$(pwd)
          python -m pytest tests/unit/ -v --cov=app --cov-report=xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Restore cached dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ needs.install-dependencies.outputs.cache-key }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Run integration tests
        run: |
          export PYTHONPATH=$(pwd)
          python -m pytest tests/integration/ -v
